DHHTGraph 1;
Schema de.uni_koblenz.jgralabtest.schemas.vertextest.VertexTestSchema;
GraphClass VertexTestGraph;
abstract VertexClass AbstractSuperNode {name : String};
VertexClass SuperNode {number : Integer};
VertexClass SubNode : AbstractSuperNode;
VertexClass DoubleSubNode : SubNode, SuperNode {nodeMap : Map<Integer, String>};
EdgeClass Link from AbstractSuperNode (0,*) (1,1) role source to SuperNode (0,*) (1,1) role target {aString: String};
EdgeClass LinkBack from SuperNode (0,*) (1,1) role sourceb to AbstractSuperNode (0,*) (1,1) role targetb aggregation shared;
EdgeClass SubLink: Link from DoubleSubNode (0,*) (1,1) role sourcec:source to SuperNode (0,*) (1,1) role targetc:target  aggregation composite{anInt: Integer};

VertexClass A;
VertexClass B;
VertexClass C: A;
VertexClass D: B;
VertexClass C2: C;
VertexClass D2: D; 
EdgeClass E from A role sourceE (0,*) (1,1) to B role x (0,*) (1,1);
EdgeClass F: E from C role sourceF (0,*) (1,1) to D role y (1,3) redefines x (1,1);
EdgeClass G: E from C role sourceG (0,*) (1,1) to D role z (1,3) (1,1);
EdgeClass H: E from A  role sourceH (0,*) (1,1) to B  role w (1,4) (1,1);
EdgeClass I from A role (0,*) (1,1) sourceI to role v A (0,*) (1,1);
EdgeClass J: E from C2 role sourceJ (0,*) redefines sourceE (1,1) to D2 role u (1,3) (1,1);
EdgeClass K: H from A role sourceK (0,*) (1,1) to B role targetK (2,3) (1,1);